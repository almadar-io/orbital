{"version":3,"sources":["webpack:///./Login/Login.js","webpack:///./Profile/Profile.js"],"names":["LoginModule","onChange","onSubmit","onProviderAuth","onRegister","onForgotPassword","classes","location","history","match","Fragment","Profile","user","users_createModel","users","users_getModel","users_updateModel","users_deleteModel","users_searchModel","users_gallery_upload","users_media_upload","users_media","users_gallery","form","notifications","saveNotification","removeNotification","onSave","model","values","modelKey","modelName","modelSchema","userSchema","createModel","updateModel","getModel","deleteModel","searchModel","uploadMedia","uploadGallery","gallery","media","onMediaUploadComplete","image","Date","now","handleClose","event","reason","notification"],"mappings":"0FAAA,kCA+BeA,UA5BK,SAAC,GAUf,IATJC,EASI,EATJA,SACAC,EAQI,EARJA,SACAC,EAOI,EAPJA,eACAC,EAMI,EANJA,WACAC,EAKI,EALJA,iBACAC,EAII,EAJJA,QACAC,EAGI,EAHJA,SACAC,EAEI,EAFJA,QACAC,EACI,EADJA,MAEA,OACE,kBAAC,IAAMC,SAAP,KACE,kBAAC,QAAD,CACET,SAAUA,EACVC,SAAUA,EACVC,eAAgBA,EAChBC,WAAYA,EACZC,iBAAkBA,EAClBC,QAASA,EACTC,SAAUA,EACVC,QAASA,EACTC,MAAOA,O,+bC2CAE,UA/DC,SAAC,GAqBX,IApBJC,EAoBI,EApBJA,KAEAC,GAkBI,EAnBJC,MAmBI,EAlBJD,mBACAE,EAiBI,EAjBJA,eACAC,EAgBI,EAhBJA,kBACAC,EAeI,EAfJA,kBACAC,EAcI,EAdJA,kBACAC,EAaI,EAbJA,qBACAC,EAYI,EAZJA,mBACAC,EAWI,EAXJA,YACAC,EAUI,EAVJA,cACAf,EASI,EATJA,SACAE,EAQI,EARJA,MACAD,EAOI,EAPJA,QACAF,EAMI,EANJA,QACAiB,EAKI,EALJA,KACAC,EAII,EAJJA,cACAC,EAGI,EAHJA,iBACAC,EAEI,EAFJA,mBAEI,uSACJ,OACE,oCACE,kBAAC,YAAD,CACEC,OAAQ,SAACC,EAAOC,GACdb,EAAkBY,EAAOC,IAE3BD,MAAOhB,EACPkB,SAAU,OACVC,UAAW,UACXC,YAAaC,IACbC,YAAarB,EACbsB,YAAanB,EACboB,SAAUrB,EACVsB,YAAapB,EACbqB,YAAapB,EACbqB,YAAanB,EACboB,cAAerB,EACfsB,QAASnB,EACToB,MAAOrB,EACPd,SAAUA,EACVE,MAAOA,EACPD,QAASA,EACTF,QAASA,EACTiB,KAAMA,EACNC,cAAeA,EACfC,iBAAkBA,EAClBC,mBAAoBA,EACpBiB,sBAAuB,SAACf,EAAOc,GAC7B1B,EAAkBY,EAAO,CAAEgB,MAAO,GAAF,OAAKF,EAAL,cAAgBG,KAAKC,YAGzD,kBAAC,qBAAD,CACEtB,cAAeA,EACfuB,YAAa,SAACC,EAAOC,EAAQC,GAC3BxB,EAAmBwB","file":"Login.bundle.js","sourcesContent":["import React from \"react\";\nimport { Login } from \"Templates\";\n\nconst LoginModule = ({\n  onChange,\n  onSubmit,\n  onProviderAuth,\n  onRegister,\n  onForgotPassword,\n  classes,\n  location,\n  history,\n  match\n}) => {\n  return (\n    <React.Fragment>\n      <Login\n        onChange={onChange}\n        onSubmit={onSubmit}\n        onProviderAuth={onProviderAuth}\n        onRegister={onRegister}\n        onForgotPassword={onForgotPassword}\n        classes={classes}\n        location={location}\n        history={history}\n        match={match}\n      />\n    </React.Fragment>\n  );\n};\n\nexport default LoginModule;\n","import React from \"react\";\nimport { ModelEdit, ClientNotification } from \"Templates\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport userSchema from \"../Models/user\";\n\nconst Profile = ({\n  user,\n  users,\n  users_createModel,\n  users_getModel,\n  users_updateModel,\n  users_deleteModel,\n  users_searchModel,\n  users_gallery_upload,\n  users_media_upload,\n  users_media,\n  users_gallery,\n  location,\n  match,\n  history,\n  classes,\n  form,\n  notifications,\n  saveNotification,\n  removeNotification,\n  ...rest\n}) => {\n  return (\n    <>\n      <ModelEdit\n        onSave={(model, values) => {\n          users_updateModel(model, values);\n        }}\n        model={user}\n        modelKey={\"name\"}\n        modelName={\"profile\"}\n        modelSchema={userSchema}\n        createModel={users_createModel}\n        updateModel={users_updateModel}\n        getModel={users_getModel}\n        deleteModel={users_deleteModel}\n        searchModel={users_searchModel}\n        uploadMedia={users_media_upload}\n        uploadGallery={users_gallery_upload}\n        gallery={users_gallery}\n        media={users_media}\n        location={location}\n        match={match}\n        history={history}\n        classes={classes}\n        form={form}\n        notifications={notifications}\n        saveNotification={saveNotification}\n        removeNotification={removeNotification}\n        onMediaUploadComplete={(model, media) => {\n          users_updateModel(model, { image: `${media}&q=${Date.now()}` });\n        }}\n      />\n      <ClientNotification\n        notifications={notifications}\n        handleClose={(event, reason, notification) => {\n          removeNotification(notification);\n        }}\n      />\n    </>\n  );\n};\n\nexport default Profile;\n"],"sourceRoot":""}